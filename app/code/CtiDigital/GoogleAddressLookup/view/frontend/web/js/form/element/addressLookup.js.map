{"version":3,"sources":["frontend/web/js/form/element/addressLookup.js"],"names":["define","ko","Element","loadListener","Initializer","Strategy","addressData","extend","onElementRender","el","isGoogleApiLoaded","subscribe","isApiLoaded","initializer","autocomplete_id","initialize","_super","isShowDetails","getForm","value","observable","country","toggleAddressData","data","evt","preventDefault"],"mappings":";;AAAA;;;;AAIAA,OAAO,CACH,IADG,EAEH,qCAFG,EAGH,2CAHG,EAIH,8CAJG,EAKH,mDALG,EAMH,+CANG,CAAP,EAOG,UAAUC,EAAV,EAAcC,OAAd,EAAuBC,YAAvB,EAAqCC,WAArC,EAAkDC,QAAlD,EAA4DC,WAA5D,EAAyE;AACxE;;AAEA,WAAOJ,QAAQK,MAAR,CAAe;AAClBC,yBAAiB,yBAAUC,EAAV,EAAc;AAAA;;AAC3B,gBAAI,CAACN,aAAaO,iBAAb,EAAL,EAAuC;AACnCP,6BAAaQ,SAAb,CAAuB,UAACC,WAAD,EAAiB;AACpC,wBAAIA,WAAJ,EAAiB;AACb,8BAAKC,WAAL,GAAmB,IAAIT,WAAJ,CAAgBK,EAAhB,EAAoBJ,QAApB,EAA8B,MAAKS,eAAnC,CAAnB;AACH;AACJ,iBAJD;AAKH,aAND,MAMO;AACH,qBAAKD,WAAL,GAAmB,IAAIT,WAAJ,CAAgBK,EAAhB,EAAoBJ,QAApB,EAA8B,KAAKS,eAAnC,CAAnB;AACH;AACJ,SAXiB;AAYlBC,oBAAY,sBAAY;AAAA;;AACpB,iBAAKC,MAAL;AACA,iBAAKC,aAAL,GAAqBX,YAAYY,OAAZ,CAAoB,KAAKJ,eAAzB,EAA0CG,aAA/D;AACA,iBAAKE,KAAL,GAAalB,GAAGmB,UAAH,CAAc,EAAd,CAAb;;AAEAd,wBAAYY,OAAZ,CAAoB,KAAKJ,eAAzB,EAA0CO,OAA1C,CAAkDV,SAAlD,CAA4D,YAAM;AAC9D,uBAAKQ,KAAL,CAAW,EAAX;AACH,aAFD;;AAIA,mBAAO,IAAP;AACH,SAtBiB;AAuBlBG,2BAAmB,2BAAUC,IAAV,EAAgBC,GAAhB,EAAqB;AACpCA,gBAAIC,cAAJ;AACAnB,wBAAYY,OAAZ,CAAoB,KAAKJ,eAAzB,EAA0CG,aAA1C,CAAwD,IAAxD;AACH;AA1BiB,KAAf,CAAP;AA4BH,CAtCD","file":"addressLookup.js","sourcesContent":["/**\n * @author Bartosz Herba <b.herba@ctidigital.com>\n * @copyright 2017 CtiDigital Sp. z o.o.\n */\ndefine([\n    'ko',\n    'Magento_Ui/js/form/element/abstract',\n    'GoogleAddressLookup/model/apiLoadListener',\n    'GoogleAddressLookup/model/google/initializer',\n    'GoogleAddressLookup/model/google/strategy/default',\n    'GoogleAddressLookup/model/address/addressData',\n], function (ko, Element, loadListener, Initializer, Strategy, addressData) {\n    'use strict';\n\n    return Element.extend({\n        onElementRender: function (el) {\n            if (!loadListener.isGoogleApiLoaded()) {\n                loadListener.subscribe((isApiLoaded) => {\n                    if (isApiLoaded) {\n                        this.initializer = new Initializer(el, Strategy, this.autocomplete_id);\n                    }\n                });\n            } else {\n                this.initializer = new Initializer(el, Strategy, this.autocomplete_id);\n            }\n        },\n        initialize: function () {\n            this._super();\n            this.isShowDetails = addressData.getForm(this.autocomplete_id).isShowDetails;\n            this.value = ko.observable('');\n\n            addressData.getForm(this.autocomplete_id).country.subscribe(() => {\n                this.value('');\n            });\n\n            return this;\n        },\n        toggleAddressData: function (data, evt) {\n            evt.preventDefault();\n            addressData.getForm(this.autocomplete_id).isShowDetails(true);\n        },\n    });\n});\n"]}