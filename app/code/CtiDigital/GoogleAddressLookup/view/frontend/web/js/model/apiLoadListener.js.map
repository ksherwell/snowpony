{"version":3,"sources":["frontend/web/js/model/apiLoadListener.js"],"names":["define","ko","ApiLoadListener","isGoogleApiLoaded","observable","callback","subscribe"],"mappings":";;;;;;AAAA;;;;;AAKAA,OAAO,CAAC,IAAD,CAAP,EAAe,UAASC,EAAT,EAAa;AACxB;;AAEA;;;;AAHwB,QAMlBC,eANkB;AAOpB,mCAAc;AAAA;;AACV,iBAAKC,iBAAL,GAAyBF,GAAGG,UAAH,CAAc,KAAd,CAAzB;AACH;AACD;;;;;AAVoB;AAAA;AAAA,sCAaVC,QAbU,EAaA;AAChB,qBAAKF,iBAAL,CAAuBG,SAAvB,CAAiCD,QAAjC;AACH;AAfmB;;AAAA;AAAA;;AAkBxB,WAAO,IAAIH,eAAJ,EAAP;AACH,CAnBD","file":"apiLoadListener.js","sourcesContent":["/**\n * @author Bartosz Herba <b.herba@ctidigital.com>\n * @copyright 2017 CtiDigital Sp. z o.o.\n */\n\ndefine(['ko'], function(ko) {\n    \"use strict\";\n\n    /**\n     * Api load listener is updated after the GoogleAutocomplete script is loaded\n     */\n    class ApiLoadListener {\n        constructor() {\n            this.isGoogleApiLoaded = ko.observable(false);\n        }\n        /**\n         * @callback callback\n         */\n        subscribe(callback) {\n            this.isGoogleApiLoaded.subscribe(callback);\n        }\n    }\n\n    return new ApiLoadListener();\n});\n"]}