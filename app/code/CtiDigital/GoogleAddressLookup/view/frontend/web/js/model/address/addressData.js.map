{"version":3,"sources":["frontend/web/js/model/address/addressData.js"],"names":["define","ko","forms","isShowDetails","observable","country","address","getForm","id","key","hasOwnProperty","addForm","elements","street_number","route","locality","administrative_area_level_1","postal_code","postal_town"],"mappings":";;AAAA;;;;;AAKAA,OAAO,CAAC,IAAD,CAAP,EAAe,UAAUC,EAAV,EAAc;AACzB;;AAEA,WAAO;AACHC,eAAO;AACH,+BAAmB;AACfC,+BAAeF,GAAGG,UAAH,CAAc,KAAd,CADA;AAEfC,yBAASJ,GAAGG,UAAH,CAAc,EAAd,CAFM;AAGfE,yBAASL,GAAGG,UAAH,CAAc,EAAd;AAHM,aADhB;AAMH,8BAAkB;AACdD,+BAAeF,GAAGG,UAAH,CAAc,KAAd,CADD;AAEdC,yBAASJ,GAAGG,UAAH,CAAc,EAAd,CAFK;AAGdE,yBAASL,GAAGG,UAAH,CAAc,EAAd;AAHK;AANf,SADJ;AAaHG,iBAAS,iBAASC,EAAT,EAAa;AAClB,iBAAK,IAAIC,GAAT,IAAgB,KAAKP,KAArB,EAA4B;AACxB,oBAAI,KAAKA,KAAL,CAAWQ,cAAX,CAA0BD,GAA1B,CAAJ,EAAoC;AAChC,wBAAIA,QAAQD,EAAZ,EAAgB;AACZ,+BAAO,KAAKN,KAAL,CAAWO,GAAX,CAAP;AACH;AACJ;AACJ;;AAED,mBAAO,KAAP;AACH,SAvBE;AAwBHE,iBAAS,iBAASH,EAAT,EAAa;AAClB,gBAAI,CAAC,KAAKD,OAAL,CAAaC,EAAb,CAAL,EAAuB;AACnB,qBAAKN,KAAL,CAAWM,EAAX,IAAiB;AACbL,mCAAeF,GAAGG,UAAH,CAAc,KAAd,CADF;AAEbC,6BAASJ,GAAGG,UAAH,CAAc,EAAd,CAFI;AAGbE,6BAASL,GAAGG,UAAH,CAAc,EAAd;AAHI,iBAAjB;AAKH;;AAED,mBAAO,KAAKF,KAAL,CAAWM,EAAX,CAAP;AACH,SAlCE;AAmCHI,kBAAU;AACNC,2BAAe,YADT;AAENC,mBAAO,WAFD;AAGNC,sBAAU,WAHJ;AAINC,yCAA6B,YAJvB;AAKNX,qBAAS,WALH;AAMNY,yBAAa,WANP;AAONC,yBAAa;AAPP;AAnCP,KAAP;AA6CH,CAhDD","file":"addressData.js","sourcesContent":["/**\n * @author Bartosz Herba <b.herba@ctidigital.com>\n * @copyright 2017 CtiDigital Sp. z o.o.\n */\n\ndefine(['ko'], function (ko) {\n    \"use strict\";\n\n    return {\n        forms: {\n            'shippingAddress': {\n                isShowDetails: ko.observable(false),\n                country: ko.observable(''),\n                address: ko.observable({}),\n            },\n            'billingAddress': {\n                isShowDetails: ko.observable(false),\n                country: ko.observable(''),\n                address: ko.observable({}),\n            }\n        },\n        getForm: function(id) {\n            for (let key in this.forms) {\n                if (this.forms.hasOwnProperty(key)) {\n                    if (key === id) {\n                        return this.forms[key];\n                    }\n                }\n            }\n\n            return false;\n        },\n        addForm: function(id) {\n            if (!this.getForm(id)) {\n                this.forms[id] = {\n                    isShowDetails: ko.observable(false),\n                    country: ko.observable(''),\n                    address: ko.observable({}),\n                };\n            }\n\n            return this.forms[id];\n        },\n        elements: {\n            street_number: 'short_name',\n            route: 'long_name',\n            locality: 'long_name',\n            administrative_area_level_1: 'short_name',\n            country: 'long_name',\n            postal_code: 'long_name',\n            postal_town: 'long_name',\n        }\n    }\n});\n"]}